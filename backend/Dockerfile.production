ARG PYTHON_VERSION=3.10.12
FROM python:${PYTHON_VERSION}-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash persian_ai
USER persian_ai

# Set up Python environment
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Copy requirements first (for better caching)
COPY --chown=persian_ai:persian_ai requirements-compatible.txt .
COPY --chown=persian_ai:persian_ai backend/requirements.txt ./backend/

# Install Python dependencies
RUN pip install --user -r requirements-compatible.txt
RUN pip install --user -r backend/requirements.txt

# Copy application code
COPY --chown=persian_ai:persian_ai . .

# Create necessary directories
RUN mkdir -p /home/persian_ai/.cache/huggingface
RUN mkdir -p /app/models /app/logs /app/data

# Download Persian models during build
RUN python -c "
from transformers import AutoTokenizer, AutoModelForSequenceClassification
model_name = 'HooshvareLab/bert-fa-base-uncased'
print('Downloading Persian BERT model...')
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSequenceClassification.from_pretrained(model_name, num_labels=7)
print('âœ… Persian models cached successfully')
"

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/api/system/health || exit 1

# Start command
CMD ["python", "-m", "uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "2"]