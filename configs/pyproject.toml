[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "persian-legal-ai-training-system"
version = "1.0.0"
description = "Persian Legal AI Training System with DoRA & QR-Adaptor"
authors = [
    {name = "dreammaker", email = "dreammaker@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10,<3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
keywords = ["persian", "legal", "ai", "training", "nlp", "machine-learning"]

dependencies = [
    "torch>=2.0.0,<2.3.0",
    "transformers>=4.30.0,<4.40.0",
    "peft>=0.4.0,<0.8.0",
    "accelerate>=0.20.0,<0.30.0",
    "fastapi>=0.95.0,<0.105.0",
    "uvicorn[standard]>=0.21.0,<0.25.0",
    "pydantic>=2.0.0,<2.6.0",
    "sqlalchemy>=2.0.0,<2.1.0",
    "pandas>=2.0.0,<2.2.0",
    "numpy>=1.24.0,<1.26.0",
    "scikit-learn>=1.3.0,<1.4.0",
    "hazm>=0.7.0,<0.8.0",
    "requests>=2.31.0,<2.32.0",
    "python-dotenv>=1.0.0,<1.1.0",
    "loguru>=0.7.0,<0.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
]
gpu = [
    "bitsandbytes>=0.41.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/persian-legal-ai-training-system"
Repository = "https://github.com/yourusername/persian-legal-ai-training-system"
Issues = "https://github.com/yourusername/persian-legal-ai-training-system/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "scripts*"]
exclude = ["tests*", "frontend*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | frontend
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip_glob = ["frontend/**/*"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["frontend/"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]