{
  "timestamp": "2025-09-10T23:20:02.591677",
  "issues_found": [
    "Docker not installed",
    "Docker Compose not installed",
    "No environment configuration files found"
  ],
  "recommendations": [
    "Install Docker Compose or use 'docker compose' (newer syntax)",
    "Create .env.production.example template"
  ],
  "existing_features": [
    "Docker Compose: docker-compose.yml",
    "Docker Compose: docker-compose.production.yml",
    "Dockerfile: backend/Dockerfile",
    "Dockerfile: persian-legal-ai-frontend/Dockerfile",
    "Dockerfile: Dockerfile.backend",
    "Dockerfile: Dockerfile.frontend",
    "Backend Python dependencies",
    "Frontend dependencies: frontend",
    "Database: persian_legal_ai.db",
    "Backend module: backend/scraper.py",
    "Backend module: backend/database.py",
    "Backend module: backend/ai_classifier.py",
    "Backend module: backend/persian_main.py",
    "Backend module: backend/test_api.py",
    "Backend module: backend/main.py",
    "Backend module: backend/__init__.py",
    "Backend module: backend/monitoring/performance_monitor.py",
    "Backend module: backend/monitoring/__init__.py",
    "Backend module: backend/models/dora_trainer.py",
    "Backend module: backend/models/qr_adaptor.py",
    "Backend module: backend/models/verified_data_trainer.py",
    "Backend module: backend/models/__init__.py",
    "Backend module: backend/models/model_manager.py",
    "Backend module: backend/auth/routes.py",
    "Backend module: backend/auth/jwt_handler.py",
    "Backend module: backend/auth/dependencies.py",
    "Backend module: backend/auth/__init__.py",
    "Backend module: backend/api/system_endpoints.py",
    "Backend module: backend/api/training_endpoints.py",
    "Backend module: backend/api/model_endpoints.py",
    "Backend module: backend/api/enhanced_api.py",
    "Backend module: backend/api/real_data_endpoints.py",
    "Backend module: backend/api/__init__.py",
    "Backend module: backend/api/enhanced_health.py",
    "Backend module: backend/optimization/system_optimizer.py",
    "Backend module: backend/optimization/memory_optimizer.py",
    "Backend module: backend/optimization/intel_optimizer.py",
    "Backend module: backend/optimization/__init__.py",
    "Backend module: backend/tests/test_integration.py",
    "Backend module: backend/tests/test_security.py",
    "Backend module: backend/routes/models.py",
    "Backend module: backend/routes/monitoring.py",
    "Backend module: backend/routes/__init__.py",
    "Backend module: backend/routes/team.py",
    "Backend module: backend/training/dora_trainer.py",
    "Backend module: backend/training/multi_gpu_trainer.py",
    "Backend module: backend/training/__init__.py",
    "Backend module: backend/data/persian_legal_loader.py",
    "Backend module: backend/data/dataset_integrator.py",
    "Backend module: backend/data/__init__.py",
    "Backend module: backend/logging/structured_logger.py",
    "Backend module: backend/services/mock_enhanced_model_service.py",
    "Backend module: backend/services/enhanced_model_service.py",
    "Backend module: backend/services/training_service.py",
    "Backend module: backend/services/persian_data_processor.py",
    "Backend module: backend/services/rapid_trainer.py",
    "Backend module: backend/services/__init__.py",
    "Backend module: backend/config/database.py",
    "Backend module: backend/config/redis_config.py",
    "Backend module: backend/middleware/rate_limiter.py",
    "Backend module: backend/middleware/__init__.py",
    "Backend module: backend/utils/persian_health_checker.py",
    "Backend module: backend/validation/dataset_validator.py",
    "Backend module: backend/validation/__init__.py",
    "Backend module: backend/database/migrations.py",
    "Backend module: backend/database/persian_db.py",
    "Backend module: backend/database/models.py",
    "Backend module: backend/database/connection.py",
    "Backend module: backend/database/__init__.py",
    "Backend module: backend/database/persian_connection.py",
    "AI model: models/persian_legal_classifier.py",
    "AI model: models/dora_trainer.py",
    "AI model: models/qr_adaptor.py",
    "AI model: ai_models/enhanced/model_info.json",
    "AI model: ai_models/enhanced/persian_bert/tokenizer_config.json",
    "AI model: ai_models/enhanced/persian_bert/config.json",
    "AI model: ai_models/enhanced/persian_bert/vocab.txt",
    "AI model: ai_models/enhanced/datasets/enhanced_legal_documents.json"
  ],
  "deployment_status": {},
  "summary": {
    "total_issues": 3,
    "total_recommendations": 2,
    "total_features": 78,
    "analysis_complete": true
  }
}