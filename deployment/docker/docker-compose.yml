version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: persian_ai_db
    environment:
      POSTGRES_DB: persian_legal_ai
      POSTGRES_USER: persian_ai_user
      POSTGRES_PASSWORD: persian_ai_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - persian_ai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U persian_ai_user -d persian_legal_ai"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: persian_ai_redis
    command: redis-server --appendonly yes --requirepass persian_ai_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - persian_ai_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: persian_ai_backend
    environment:
      - DATABASE_URL=postgresql://persian_ai_user:persian_ai_secure_password_2024@database:5432/persian_legal_ai
      - REDIS_URL=redis://:persian_ai_redis_password@redis:6379/0
      - JWT_SECRET_KEY=persian_ai_jwt_secret_key_2024_very_secure
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80,https://localhost:3000
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - GPU_ENABLED=true
      - MAX_GPU_MEMORY=0.9
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/models:/app/models
      - ./backend/data:/app/data
      - ./backend/certificates:/app/certificates
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - persian_ai_network
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: persian_ai_frontend
    environment:
      - VITE_API_BASE_URL=http://backend:8000
      - VITE_WS_BASE_URL=ws://backend:8000
    ports:
      - "3000:80"
      - "3443:443"
    networks:
      - persian_ai_network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: persian_ai_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - persian_ai_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  persian_ai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16