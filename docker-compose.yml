version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: persian-legal-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-persian_redis_2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - persian-ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-persian_redis_2024}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: persian-legal-backend
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///app/data/persian_legal_ai.db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-persian_redis_2024}@redis:6379/0
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
    volumes:
      - backend_data:/app/data
      - backend_models:/app/models
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - persian-ai-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
        reservations:
          memory: 2G
          cpus: '1'

  # Next.js Frontend
  frontend:
    build:
      context: ./persian-legal-ai-frontend
      dockerfile: Dockerfile
    container_name: persian-legal-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api
      - NODE_ENV=production
    ports:
      - "3000:80"
    networks:
      - persian-ai-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  backend_data:
    driver: local
  backend_models:
    driver: local
  backend_logs:
    driver: local

networks:
  persian-ai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Environment variables template:
# Create a .env file with:
# REDIS_PASSWORD=your_secure_redis_password